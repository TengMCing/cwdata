usethis::use_data_raw("crop_yield")
library(janitor)
library(tidyverse)
url <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/key_crop_yields.csv'
crop_yield <- read_csv(url) %>%
clean_names() %>%
pivot_longer(
cols = -c(entity, code, year),
names_to = "crop",
values_to = "yield"
) %>%
mutate(crop = gsub("_tonnes_per_hectare", "", crop))
usethis::use_data(crop_yield, overwrite = TRUE)
usethis::use_mit_license()
usethis::use_mit_license()
usethis::use_mit_license()
library(cwdata)
cwdata::crop_yield
library(cwdata)
cwdata::get_crop_yield()
mutate
?gsub
??clean_name
`%>%`
??`%>%`
magrittr::`%>%`
usethis::use_package("dplyr")
usethis::use_package("readr")
usethis::use_package("tidyr")
usethis::use_package("janitor")
usethis::use_package("magrittr")
dplyr::mutate(cars, speed)
dplyr::filter(cars, speed > 0)
speed > 0
(function(dat, col) {})(cars, speed > 0)
(function(dat, col) {dat; col; return(NULL)})(cars, speed > 0)
with(cars, speed > 0)
dplyr::filter(cars, speed > 0)
1 + 2
expression(1 + 2)
quote(1 + 2)
eval(quote(1 + 2))
eval(quote(x + 2y))
eval(quote(x + y))
eval(quote(x + y), envir = list(x = 1, y = 2))
x + y
library(cwdata)
cwdata::get_crop_yield()
cwdata::crop_yield
cwdata::get_crop_yield()
shiny::runApp('testtest')
system.file("inst", package = "cwdata")
system.file(package = "cwdata")
system.file("app.R", package = "cwdata")
library(cwdata)
system.file("app.R", package = "cwdata")
library(cwdata)
system.file("app.R", package = "cwdata")
system.file("myapplication/app.R", package = "cwdata")
system.file("myapp/app.R", package = "cwdata")
library(cwdata)
cwdata::run_app()
cwdata::run_app
cwdata::run_app
cwdata::run_app()
cwdata::run_app()
library(cwdata)
?cwdata::get_crop_yield
library(cwdata)
?cwdata::get_crop_yield
library(cwdata)
?cwdata::get_crop_yield
usethis::use_vignette("test_vig")
